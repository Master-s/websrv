
--- source/build/include/vfs.h.old	2024-07-26 02:43:29.000000000 +0200
+++ source/build/include/vfs.h	2024-11-08 20:16:57.041596256 +0100
@@ -82,14 +82,28 @@
 # include <io.h>
 #endif
 
+static FORCE_INLINE FILE* buildvfs_fopen(const char* fn, const char* mode)
+{
+    char buf[PATH_MAX];
+
+    if(!fn) return nullptr;
+    if(*fn == '/') return fopen(fn, mode);
+    if(!getcwd(buf, sizeof(buf))) return nullptr;
+
+    strcat(buf, "/");
+    strcat(buf, fn);
+    return fopen(buf, mode);
+}
+
+
 using buildvfs_FILE = FILE *;
 #define buildvfs_EOF EOF
 #define buildvfs_fread(p, s, n, fp) fread((p), (s), (n), (fp))
 #define buildvfs_fwrite(p, s, n, fp) fwrite((p), (s), (n), (fp))
-#define buildvfs_fopen_read(fn) fopen((fn), "rb")
-#define buildvfs_fopen_write(fn) fopen((fn), "wb")
-#define buildvfs_fopen_write_text(fn) fopen((fn), "w")
-#define buildvfs_fopen_append(fn) fopen((fn), "ab+")
+#define buildvfs_fopen_read(fn) buildvfs_fopen((fn), "rb")
+#define buildvfs_fopen_write(fn) buildvfs_fopen((fn), "wb")
+#define buildvfs_fopen_write_text(fn) buildvfs_fopen((fn), "w")
+#define buildvfs_fopen_append(fn) buildvfs_fopen((fn), "ab+")
 #define buildvfs_fgetc(fp) fgetc(fp)
 #define buildvfs_fputc(c, fp) fputc((c), (fp))
 #define buildvfs_fgets(str, size, fp) fgets((str), (size), (fp))
